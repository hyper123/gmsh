# info on the build type
set(NCPUS 4)
set(CTEST_SITE "$ENV{HOST}")
set(CDASH_MODEL "Nightly")
#set(CDASH_MODEL "Experimental")
set(CTEST_BUILD_NAME "Linux64")
set(CTEST_BUILD_CONFIGURATION "release") # allow choosing type of build
set(CTEST_NIGHTLY_START_TIME "02:00:00 UTC")
# setup for the drop site
set(CUSTOM_DROP_SITE "cm3012.ltas.ulg.ac.be" CACHE STRING "overided" FORCE)
set(CUSTOM_DROP_LOCATION "/CDash/submit.php?project=cm3_nightly" CACHE STRING "overrided" FORCE)
set(CUSTOM_DROP_PROJECT "cm3_nightly" CACHE STRING "overided" FORCE)

# cmake command
set(CTEST_CMAKE_COMMAND "/usr/bin/cmake")
set(CTEST_CMAKE_GENERATOR "Unix Makefiles")

# source and binary directory
set(CTEST_SOURCE_DIRECTORY "$ENV{HOME}/nightly_gmsh")
set(CTEST_BINARY_DIRECTORY "$ENV{HOME}/nightly_gmsh/bin")
set(CTEST_CM3_SOURCE "${CTEST_SOURCE_DIRECTORY}/projects/cm3apps")
set(CTEST_CM3_CUSTOM "${CTEST_SOURCE_DIRECTORY}/projects/cm3apps/nightly")
# svn configuration (co and update)
find_program(CTEST_SVN_COMMAND NAMES svn)
set(CTEST_SVN_REPOS https://geuz.org/svn/gmsh/trunk)
if(NOT EXISTS "${CTEST_SOURCE_DIRECTORY}")
  set(CTEST_CHECKOUT_COMMAND "${CTEST_SVN_COMMAND} co ${CTEST_SVN_REPOS} ${CTEST_SOURCE_DIRECTORY}")
#  set(CTEST_CHECKOUT_COMMAND "${CTEST_SVN_COMMAND} co ${CTEST_SVN_REPOS} ${CTEST_SOURCE_DIRECTORY}")
endif(NOT EXISTS "${CTEST_SOURCE_DIRECTORY}")
set(CTEST_UPDATE_COMMAND "${CTEST_SVN_COMMAND}")


# options
set(CTEST_CONFIGURE_COMMAND "${CTEST_CMAKE_COMMAND} -DCMAKE_BUILD_TYPE:STRING=${CTEST_BUILD_CONFIGURATION}")
set(CTEST_CONFIGURE_COMMAND "${CTEST_CONFIGURE_COMMAND} -DENABLE_DGSHELL=ON")
set(CTEST_CONFIGURE_COMMAND "${CTEST_CONFIGURE_COMMAND} -DENABLE_DG3D=ON")
set(CTEST_CONFIGURE_COMMAND "${CTEST_CONFIGURE_COMMAND} -DENABLE_MSCH=ON")
set(CTEST_CONFIGURE_COMMAND "${CTEST_CONFIGURE_COMMAND} -DENABLE_MPI=ON")
set(CTEST_CONFIGURE_COMMAND "${CTEST_CONFIGURE_COMMAND} -DENABLE_WRAP_PYTHON=ON")
# disable the warning to avoid emails when just warning (better way to achieve this)? 
set(CTEST_CONFIGURE_COMMAND "${CTEST_CONFIGURE_COMMAND} -DDISABLE_WARNINGS=ON")
# segfault when cleaning if compile with netgen
set(CTEST_CONFIGURE_COMMAND "${CTEST_CONFIGURE_COMMAND} -DENABLE_NETGEN=OFF")
set(CTEST_CONFIGURE_COMMAND "${CTEST_CONFIGURE_COMMAND} \"${CTEST_CM3_SOURCE}\"")

set($ENV{LC_MESSAGES} "en_US")

# reset the binary dir (fresh build)
ctest_empty_binary_directory(${CTEST_BINARY_DIRECTORY})
ctest_start(${CDASH_MODEL})
ctest_update()
ctest_configure()
# parallel build
set(CTEST_BUILD_FLAGS -j${NCPUS})
ctest_build(TARGET html)
ctest_build(TARGET package NUMBER_ERRORS ERR)
set(ENV{CM3_BUILD_ERROR} ${ERR})

# launch test on 4 processor
ctest_test(PARALLEL_LEVEL ${NCPUS})
ctest_submit()
